Source:

1) Two-space indent, do not tab indent because it doesn't copy/paste will into psql

2) Always specify schema

3) Never split schema and table name, even for vertical alignments.  This makes
   find/replace much easier.


Style:

1) ALL CAPS SQL KEYWORDS.  We have tons of legacy code that doesn't follow this, but
   just convert as you go while not spending much time doing it.

2) lower_case function calls, and value-like keywords like default, true, false


Types:

1) Most standard compliant type names, be consistent for easier find/replace.  These
   should also be what PostgreSQL reports back from the \d commands.

   https://www.postgresql.org/docs/9.4/datatype.html

   bigint             not int8
   boolean            not bool
   character          not char
   integer            not int or int4
   real               not float4
   "double precision" not float8
   numeric            not decimal

2) Use "cidr", "inet", and "macaddr".

3) Use decimal instead of "money", since "money" is locale-sensitive)

4) TODO: Do use "uuid" types instead of our "Identifier" class using two longs?

5) Spell-out "true" or "false" for booleans, and leave lowercase.

6) Do use ENUM types where appropriate, but do not abuse them in an attempt to
   save space.


Naming:

1) Numeric generated primary keys named "id"

2) Tables named capitalized and singular, matching Java class name

3) Table names never all caps for first word, so that the table
   name matches the column names that refer to it, except the capitalization of the
   first character.  This makes for simple, predictable, and bidirectionally unambiguous
   lowerCamelCase to UpperCamelCase conversions.  So "IpAddress" instead of "IPAddress".

   Additional words may maintain their capitalization, such as "DnsTLD", but the
   trend is going more to avoiding this: "DnsTld".

4) Column names never all caps for first word, "IpAddress" instead of "IPAddress".
   "IPAddress" becomes bean "iPAddress".

   Additional words may maintain their capitalization, such as "dnsTLD", but the
   trend is going more to avoiding this: "dnsTld".

5) Non-foreign key columns lower camelCase, matching Java field and JavaBeans getters.

6) Foreign key columns named capital, matching the name of the table they reference.
   This connects well to AOSH dot-join syntax:
       select Package.name from Username

7) Boolean columns should be "isSomething", matching the Java conventions.
   On the Java side, the field should also be "isSomething", with a getter
   "isSomething()" and setter of "setSomething(boolean isSomething)".

8) Not strictly required, but good idea to avoid Java keywords in column names,
   as this can save the overhead of manually declaring JavaBeans properties and
   JSP EL expressions such as obj['public'] where obj.public wouldn't work.

9) Indexes that exist primarily to align to foreign keys should be named
   "Table_column_fkey"


Inserting:

1) Always specify column names on insert:
   Yes: INSERT INTO example (col1, col) VALUES (val1, val2);
   No:  INSERT INTO example VALUES (val1, val2);

   Once again, tons of old code violates this - fix as you go.


Generated Keys:

1) Use INSERT INTO ... RETURNING ... when possible

